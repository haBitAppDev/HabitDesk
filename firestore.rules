rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function hasRole(role) {
      return request.auth != null && request.auth.token.role == role;
    }

    function hasAnyRole() {
      return request.auth != null &&
        request.auth.token.role in ['admin', 'therapist', 'patient'];
    }

    match /program_templates/{id} {
      allow read: if hasRole('admin') || hasRole('therapist');
      allow write: if hasRole('admin');
    }

    match /task_templates/{id} {
      allow read: if hasRole('admin') || hasRole('therapist');
      allow write: if hasRole('admin');
    }

    match /therapist_invites/{id} {
      allow read, write: if hasRole('admin');
    }

    match /therapist_types/{id} {
      allow read: if hasRole('admin') || hasRole('therapist');
      allow write: if hasRole('admin');
    }

    match /programs/{id} {
      allow create: if hasRole('admin') || (
        hasRole('therapist') &&
        request.resource.data.ownerId == request.auth.uid
      );
      allow read: if hasRole('admin') || hasRole('therapist');
      allow update, delete: if hasRole('admin') || (
        hasRole('therapist') &&
        resource.data.ownerId == request.auth.uid &&
        request.resource.data.ownerId == request.auth.uid
      );
    }

    match /tasks/{id} {
      allow read: if hasAnyRole();
      allow create: if hasRole('therapist') &&
        request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if hasRole('therapist') &&
        resource.data.ownerId == request.auth.uid &&
        request.resource.data.ownerId == request.auth.uid;
    }

    match /program_assignments/{id} {
      allow create: if hasRole('therapist') &&
        request.resource.data.userId is string &&
        request.resource.data.programId is string;
      allow read: if hasRole('admin') ||
        hasRole('therapist') ||
        (hasRole('patient') && resource.data.userId == request.auth.uid);
      allow update: if hasRole('admin') ||
        (hasRole('therapist') &&
          resource.data.userId == request.resource.data.userId &&
          request.resource.data.userId is string) ||
        (hasRole('patient') &&
          resource.data.userId == request.auth.uid &&
          request.resource.data.userId == request.auth.uid);
      allow delete: if hasRole('admin') || hasRole('therapist');
    }

    match /users/{uid} {
      allow read, update: if request.auth != null &&
        (request.auth.uid == uid || hasRole('admin'));
      allow create: if hasAnyRole();
    }

    match /Patient/{uid} {
      allow read: if hasRole('admin') ||
        (hasRole('therapist') && resource.data.therapistId == request.auth.uid) ||
        (hasRole('patient') && request.auth.uid == uid);
      allow create: if hasRole('admin') ||
        (hasRole('patient') && request.auth.uid == uid);
      allow update: if hasRole('admin') ||
        (hasRole('patient') && request.auth.uid == uid) ||
        (hasRole('therapist') && resource.data.therapistId == request.auth.uid &&
          request.resource.data.therapistId == request.auth.uid);
    }

    match /Therapist/{uid} {
      allow read: if hasAnyRole();
      allow create: if hasRole('admin') ||
        (hasRole('therapist') && request.auth.uid == uid);
      allow update, delete: if hasRole('admin') ||
        (hasRole('therapist') && request.auth.uid == uid);
    }
  }
}
